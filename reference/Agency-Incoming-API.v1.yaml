openapi: 3.0.0
info:
  title: Agency Incoming API
  version: '1.0'
  description: API spec for agencies to process incoming requests from Freede.
servers: []
paths:
  /intent/communication:
    post:
      summary: Agency confirmation of intent to communicate with consumer
      tags:
        - Intents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  allowed:
                    type: boolean
                required:
                  - allowed
        '401':
          description: Unauthorized
      operationId: post-intent-communication
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: Intent ID
                consumer_ref:
                  type: string
                  description: Consumer Reference
                method:
                  type: integer
                  description: '0 = Email, 1 = SMS, 2 = Popup'
                  enum:
                    - 0
                    - 1
                    - 2
                type:
                  type: integer
                  description: |-
                    0 = Registration Confirmation
                    1 = Initial Score
                    2 = Score Change
                    3 = Payment attempt failed, no payment plan
                    4 = Payment attempt failed, payment plan
                    5 = Upcoming payment reminder
                    6 = Repayment offer
                    7 = Increase payment plan
                    8 = Setup Payment (Standard)
                    9 = Setup Payment (Good Place)
                    —— Future Planned ——
                    10 = Deregister
                    11 = Payment applied
                    12 = Payment plan confirmation
                    13 = Payment plan canceled
                    14 = Payment returned
                    15 = Payment refunded
                  minimum: 0
                  maximum: 15
  /registration:
    post:
      summary: Register consumer
      tags:
        - Registration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  first:
                    type: string
                  last:
                    type: string
                  ref:
                    type: string
              examples: {}
        '401':
          description: Unauthorized
      operationId: post-registration
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
      description: Freede will submit this POST request when a consumer is attempting to register with the agency. Agency may perform their own validation checks and return a response.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first:
                  type: string
                last:
                  type: string
                address:
                  type: string
                address2:
                  type: string
                city:
                  type: string
                state:
                  type: string
                zip:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                  format: email
                regcode:
                  type: string
                verify:
                  type: boolean
                optins:
                  $ref: '#/components/schemas/optins'
              required:
                - regcode
                - verify
            examples:
              example-1:
                value:
                  first: string
                  last: string
                  address: string
                  address2: string
                  city: string
                  state: string
                  zip: string
                  phone: string
                  email: user@example.com
                  regcode: string
                  verify: true
                  optins:
                    sms: true
                    phone: true
                    email: true
                    push: true
                    default: email
        description: Consumer registration information
  '/account/{accountNum}':
    get:
      summary: Get account details
      tags:
        - Accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
              examples:
                Example:
                  value:
                    type: medical
                    interest_bearing: true
                    ref: string
                    desc: string
                    status_reason: string
                    status: 0
                    balance_current: 0
                    balance_start: 0
                    balance_buckets:
                      - name: string
                        balance_current: 0
                        balance_start: 0
                        type: interest
                    agency:
                      ref: string
                      last_payment_amt: 0
                      last_activity: string
                      last_payment_date: string
                    creditor:
                      ref: string
                      last_payment_amt: 0
                      last_activity: string
                      last_payment_date: string
                      name: string
                    consumer:
                      ref: string
                      first: string
                      last: string
        '401':
          description: Unauthorized
      operationId: get-account
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
      description: Endpoint to get the account details from the agency
    parameters:
      - schema:
          type: string
        name: accountNum
        in: path
        required: true
        description: Agency account number
  '/consumer/{consumerRef}/form':
    post:
      summary: Consumer submitted form
      responses:
        '200':
          description: OK
      operationId: post-forms
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - dispute
                    - attorney
                    - bankruptcy
                form:
                  oneOf:
                    - $ref: '#/components/schemas/DisputeForm'
                    - $ref: '#/components/schemas/AttorneyForm'
                    - $ref: '#/components/schemas/BankruptcyForm'
                tasks:
                  type: array
                  description: 'If provided, use this ID and type to submit back to the Agency API'
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                        enum:
                          - proof_of_debt
      description: Endpoint to receive forms consumer has submitted
      tags:
        - Consumers
    parameters:
      - schema:
          type: string
        name: consumerRef
        in: path
        required: true
  '/consumer/{consumerRef}/payments':
    post:
      summary: Consumer Payment
      operationId: post-consumer-payment
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
      description: ''
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerPaymentRequest'
    parameters:
      - schema:
          type: string
        name: consumerRef
        in: path
        required: true
    get:
      summary: Get Consumer Payments
      operationId: get-consumer-consumerRef-payments
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsumerPayment'
        '401':
          description: Unauthorized
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
        - schema:
            type: string
          in: query
          name: last_updated
          description: Return payments that have been updated since the given datetime string
      description: Get payments on the consumer level
      tags:
        - Payments
  '/consumer/{consumerRef}':
    parameters:
      - schema:
          type: string
        name: consumerRef
        in: path
        required: true
    put:
      summary: Update consumer demographics
      tags:
        - Consumers
      responses:
        '200':
          description: OK
      operationId: put-consumer-consumerRef
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  first: string
                  last: string
                  address: string
                  address2: string
                  city: string
                  state: string
                  zip: string
                  email: string
                  phone: string
                  ref: string
              properties:
                address:
                  type: string
                  minLength: 1
                address2:
                  type: string
                  minLength: 1
                city:
                  type: string
                  minLength: 1
                state:
                  type: string
                  minLength: 2
                  maxLength: 2
                zip:
                  type: string
                email:
                  type: string
                  minLength: 1
                phone:
                  type: string
                  minLength: 11
                  maxLength: 11
              required:
                - address
                - address2
                - city
                - state
                - zip
                - email
                - phone
            examples:
              Example:
                value:
                  address: string
                  address2: string
                  city: string
                  state: TX
                  zip: string
                  email: string
                  phone: '12223334444'
      description: Endpoint to receive updated consumer demographics.
    delete:
      summary: Deregister consumer
      operationId: delete-consumer-consumerRef
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
      responses:
        '200':
          description: OK
      description: Endpoint to deregister consumer from Freede
      tags:
        - Consumers
    get:
      summary: Get Consumer Info
      operationId: get-consumer-consumerRef
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConsumer'
              examples:
                Example 1:
                  value:
                    first: string
                    last: string
                    address: string
                    address2: string
                    city: string
                    state: string
                    zip: string
                    phone: string
                    optins:
                      sms: true
                      phone: true
                      email: true
                      push: true
                      esign: true
                      default: sms
      tags:
        - Consumers
  '/consumer/{consumerRef}/accounts':
    parameters:
      - schema:
          type: string
        name: consumerRef
        in: path
        required: true
    get:
      summary: Get Consumer Accounts
      operationId: get-consumer-accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
              example:
                - ref: string
                  desc: string
                  status_reason: string
                  status: 0
                  balance_current: 0
                  balance_start: 0
                  balance_buckets:
                    - name: string
                      balance_current: 0
                      balance_start: 0
                      type: interest
                  agency:
                    ref: string
                    last_payment_amt: 0
                    last_activity: string
                    last_payment_date: string
                  creditor:
                    ref: string
                    last_payment_amt: 0
                    last_activity: string
                    last_payment_date: string
                    name: string
                  type: medical
                  interest_bearing: true
      description: ''
      parameters:
        - schema:
            type: string
            format: date-time
          in: query
          name: last_updated
          description: Return accounts that have been updated since the given datetime string
      tags:
        - Consumers
  '/consumer/{consumerRef}/optins':
    parameters:
      - schema:
          type: string
        name: consumerRef
        in: path
        required: true
        description: Agency consumer reference
    put:
      summary: Update consumer optins
      tags:
        - Consumers
      responses:
        '200':
          description: OK
      operationId: put-consumer-consumerRef-optins
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/optins'
            examples:
              Example:
                value:
                  sms: true
                  phone: true
                  email: true
                  push: true
                  esign: true
                  default: email
      description: Endpoint to receive updated consumer optins
  '/consumer/{consumerRef}/conversation':
    parameters:
      - schema:
          type: string
        name: consumerRef
        in: path
        required: true
    post:
      summary: Consumer conversation
      tags:
        - Consumers
      responses:
        '200':
          description: OK
      operationId: post-consumer-consumerRef-conversation
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conversation'
            examples:
              Chat Example:
                value:
                  type: chat
                  when: '2019-08-24T14:15:22Z'
                  id: 5fa4c5a7bdb82a9e6e0a9ae9
                  status: open
      description: Endpoint to receive notice of consumer conversation. Can use Id to retrieve conversation details from Agency API
  '/consumer/{consumerRef}/conversation/{conversationId}':
    parameters:
      - schema:
          type: string
        name: consumerRef
        in: path
        required: true
      - schema:
          type: string
        name: conversationId
        in: path
        required: true
    put:
      summary: Update consumer conversation
      operationId: put-consumer-consumerRef-conversationId
      responses:
        '200':
          description: OK
      description: Update the status of the consumer conversation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                when:
                  type: string
                  description: When the status change happened
                  format: date-time
                status:
                  type: string
                  description: Status of the conversation
                  enum:
                    - closed
              required:
                - when
                - status
            examples:
              example-1:
                value:
                  when: '2019-08-24T14:15:22Z'
                  status: closed
      tags:
        - Consumers
  '/account/{accountNum}/payment':
    parameters:
      - schema:
          type: string
        name: accountNum
        in: path
        required: true
    post:
      summary: Account Payment
      tags:
        - Payments
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: post-account-accountNum-payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
            examples:
              Example 1:
                value:
                  id: string
                  amount: 0
                  when: '2019-08-24T14:15:22Z'
                  consumer_ref: string
                  method: bank
                  status: 0
                  scheduled: '2019-08-24T14:15:22Z'
          application/xml:
            schema:
              type: object
              properties: {}
      description: Consumer has sent a payment for an account
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
    get:
      summary: Get Account Payments
      operationId: get-account-accountNum-payment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '401':
          description: Unauthorized
      security: []
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
        - schema:
            type: string
          in: query
          name: last_updated
          description: Return payments that have been updated since the given datetime string
      description: Get account payments
      tags:
        - Payments
  '/account/{accountNum}/payment/{paymentId}':
    parameters:
      - schema:
          type: string
        name: paymentId
        in: path
        required: true
      - schema:
          type: string
        name: accountNum
        in: path
        required: true
    put:
      summary: Update payment
      tags:
        - Payments
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: put-account-accountNum-payment-paymentId
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
      description: Endpoint to update the payment status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: '0=scheduled,1=pending,2=applied,3=refunded,4=returned,5=canceled'
                when:
                  type: string
                  description: When the status change happened
                scheduled:
                  type: string
                  description: when the payment is scheduled if it's a scheduled payment
              required:
                - status
                - when
  '/account/{accountNum}/offer':
    parameters:
      - schema:
          type: string
        name: accountNum
        in: path
        required: true
    post:
      summary: Submit settlement offer
      tags:
        - Offers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: '0 = rejected, 1 = accepted, 2 = counter, 3 = in review'
                    enum:
                      - 0
                      - 1
                      - 2
                      - 3
                  counter:
                    type: number
                  expires:
                    type: string
                    format: date-time
                required:
                  - status
        '401':
          description: Unauthorized
      operationId: post-account-accountNum-offer
      parameters:
        - schema:
            type: string
          in: header
          name: Freede-Verification-Key
          description: SHA256 Hash of Token and API key
        - schema:
            type: string
          in: header
          name: Freede-API-Version
          description: Freede Agency Incoming API Version
        - schema:
            type: string
          in: header
          name: Freede-Verification-Token
          description: Token Salt
      description: Submit account settlement offer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: Offer Id for reference if there is a manual review.
                amount:
                  type: number
                  description: Amount consumer has offered to settle the account
                task_id:
                  type: string
                  description: Task Id to be used if manual review
                consumer_ref:
                  type: string
                  description: Consumer ref that has submitted this request
              required:
                - id
                - amount
                - task_id
                - consumer_ref
tags:
  - name: Accounts
  - name: Consumers
  - name: Forms
  - name: Registration
components:
  schemas:
    Account:
      description: Agency Account
      type: object
      properties:
        ref:
          type: string
          minLength: 1
          description: Agency account reference number
        desc:
          type: string
          minLength: 1
          description: Agency account description
        status_reason:
          type: string
          minLength: 1
        status:
          type: integer
          minimum: 0
          maximum: 4
          description: '0=active,1=closed paid in full, 2=closed settlement, 3=disputed, 4=pulled'
        balance_current:
          type: number
        balance_start:
          type: number
        balance_buckets:
          type: array
          uniqueItems: true
          minItems: 1
          description: 'List of balance buckets to display. If a bucket is provided and is null or blank, we will not display it. We display the exact value provided, given it is a number with a precision of 2. Any other values will not be processed.'
          items:
            type: object
            properties:
              name:
                type: string
                minLength: 1
              balance_current:
                type: number
              balance_start:
                type: number
              type:
                type: string
                minLength: 1
                enum:
                  - interest
                  - principal
                  - fees
                  - other
            required:
              - name
              - balance_current
              - balance_start
              - type
        agency:
          type: object
          required:
            - ref
          properties:
            ref:
              type: string
              minLength: 1
            last_payment_amt:
              type: number
            last_activity:
              type: string
              minLength: 1
            last_payment_date:
              type: string
              minLength: 1
        creditor:
          type: object
          required:
            - ref
            - name
          properties:
            ref:
              type: string
              minLength: 1
            last_payment_amt:
              type: number
            last_activity:
              type: string
              minLength: 1
            last_payment_date:
              type: string
              minLength: 1
            name:
              type: string
              minLength: 1
        type:
          type: string
          enum:
            - medical
            - student
        interest_bearing:
          type: boolean
        convenience_fee:
          type: number
          x-stoplight:
            id: sag9i4bpzl4j3
      required:
        - ref
        - status
        - balance_current
        - balance_start
        - agency
        - creditor
        - type
        - interest_bearing
    Attorney:
      description: ''
      type: object
      properties:
        name:
          type: string
          minLength: 1
        lawfirm:
          type: string
          minLength: 1
        phone:
          type: string
          minLength: 1
        fax:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
        website:
          type: string
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
    Bankruptcy:
      description: ''
      type: object
      properties:
        chapter:
          type: string
        filing_date:
          type: string
          format: date
        discharge_date:
          type: string
          format: date
        case_number:
          type: string
        district_court:
          type: string
    Consumer:
      description: ''
      type: object
      properties:
        first:
          type: string
          minLength: 1
        last:
          type: string
          minLength: 1
        address:
          type: string
          minLength: 1
        address2:
          type: string
          minLength: 1
        city:
          type: string
          minLength: 1
        state:
          type: string
          minLength: 1
        zip:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
        phone:
          type: string
          minLength: 1
      x-examples:
        example-1:
          first: string
          last: string
          address: string
          address2: string
          city: string
          state: string
          zip: string
          email: string
          phone: string
    GetConsumer:
      type: object
      x-examples:
        example-1:
          first: string
          last: string
          address: string
          address2: string
          city: string
          state: string
          zip: string
          email: string
          phone: string
      x-stoplight:
        id: be94b85ac0e64
      title: GetConsumer
      properties:
        first:
          type: string
          minLength: 1
        last:
          type: string
          minLength: 1
        address:
          type: string
          minLength: 1
        address2:
          type: string
          minLength: 1
        city:
          type: string
          minLength: 1
        state:
          type: string
          minLength: 1
        zip:
          type: string
          minLength: 1
        phone:
          type: string
          minLength: 1
        optins:
          $ref: '#/components/schemas/optins'
    Conversation:
      description: ''
      type: object
      properties:
        type:
          type: string
          minLength: 1
          enum:
            - sms
            - email
            - chat
            - phone
          description: Conversation channel type
        when:
          type: string
          minLength: 1
          format: date-time
          description: Datetime of when the conversation happened
        id:
          type: string
          minLength: 1
          description: Conversation ID
        status:
          type: string
          description: Status of the conversation
          enum:
            - open
            - closed
      required:
        - type
        - when
        - id
        - status
      x-examples:
        Chat Example:
          type: chat
          when: '2019-08-24T14:15:22Z'
          id: 5fa4c5a7bdb82a9e6e0a9ae9
          status: open
    DisputeForm:
      title: DisputeForm
      type: object
      properties:
        amount:
          type: number
        reason:
          type: string
        bankruptcy:
          $ref: '#/components/schemas/Bankruptcy'
        attorney:
          $ref: '#/components/schemas/Attorney'
        accounts:
          type: array
          items:
            type: string
        files:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              base64:
                type: string
              mime:
                type: string
    BankruptcyForm:
      title: Bankruptcy Form
      type: object
      properties:
        reason:
          type: string
        bankruptcy:
          $ref: '#/components/schemas/Bankruptcy'
        attorney:
          $ref: '#/components/schemas/Attorney'
        accounts:
          type: array
          items:
            type: string
        files:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              base64:
                type: string
              mime:
                type: string
    AttorneyForm:
      title: AttorneyForm
      type: object
      properties:
        reason:
          type: string
        attorney:
          $ref: '#/components/schemas/Attorney'
        accounts:
          type: array
          items:
            type: string
        files:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              base64:
                type: string
              mime:
                type: string
    optins:
      title: optins
      type: object
      properties:
        sms:
          type: boolean
        phone:
          type: boolean
        email:
          type: boolean
        push:
          type: boolean
        esign:
          type: boolean
        default:
          type: string
          description: Default mode of communication.
          enum:
            - sms
            - phone
            - email
            - push
    Payment:
      type: object
      x-examples:
        Example 1:
          id: string
          amount: 0
          when: '2019-08-24T14:15:22Z'
          consumer_ref: string
          method: bank
          status: 0
          scheduled: '2019-08-24T14:15:22Z'
      properties:
        id:
          type: string
        amount:
          type: number
        when:
          type: string
          format: date-time
          example: '2019-08-24T14:15:22Z'
        consumer_ref:
          type: string
        method:
          type: string
          enum:
            - bank
            - card
        status:
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          description: |-
            0=scheduled,1=pending,2=applied,3=refunded,4=returned,5=canceled

            Statuses 0 and 1 can only be set by Freede
        scheduled:
          type: string
          format: date-time
          example: '2019-08-24T14:15:22Z'
          description: Scheduled can only be set by Freede on Freede initiated payments
      required:
        - id
        - amount
        - when
        - consumer_ref
        - method
        - status
    ConsumerPaymentRequest:
      type: object
      x-examples:
        Example 1:
          id: string
          amount: 0
          when: '2019-08-24T14:15:22Z'
          consumer_ref: string
          method: bank
          status: 0
          scheduled: '2019-08-24T14:15:22Z'
      properties:
        id:
          type: string
          description: Freede Payment ID
        amount:
          type: number
        when:
          type: string
          format: date-time
          example: '2019-08-24T14:15:22Z'
        method:
          type: string
          enum:
            - bank
            - card
        status:
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        scheduled:
          type: string
          format: date-time
          example: '2019-08-24T14:15:22Z'
        account_num:
          type: string
      required:
        - id
        - amount
        - when
        - method
        - status
    ConsumerPayment:
      type: object
      x-examples:
        Example 1:
          id: string
          amount: 0
          when: '2019-08-24T14:15:22Z'
          consumer_ref: string
          method: bank
          status: 0
          scheduled: '2019-08-24T14:15:22Z'
      properties:
        id:
          type: string
          description: Freede Payment ID
        ref_id:
          type: string
        amount:
          type: number
        when:
          type: string
          format: date-time
          example: '2019-08-24T14:15:22Z'
        method:
          type: string
          enum:
            - bank
            - card
        status:
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          description: '2=applied,3=refunded,4=returned,5=canceled'
        account_num:
          type: string
      required:
        - ref_id
        - amount
        - when
        - method
        - status
    ConsumerRef:
      title: ConsumerRef
      x-stoplight:
        id: nuwsp8cjocfvw
      type: object
      properties:
        first:
          type: string
        last:
          type: string
        ref:
          type: string
  securitySchemes: {}
